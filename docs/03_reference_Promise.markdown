Python PromiseKeeper Reference
==============================

This is the main reference documentation for the promise\_keeper module.  The
source maintains more up to date documentation in docstrings.  Check pydocs
for more information.


Class Promise
-------------
A _Promise_ is a reference to the work you have submitted to a _PromiseKeeper_
instance.  It is used to track what what submitted and the status of the work.
_Promises_ are normally generated by the _PromiseKeeper_ in response to a
_submit_ request.

    from promise_keeper import PromiseKeeper
    pk = PromiseKeeper
    promise = pk.submit(lambda x: x*0.5, (50,))
    while not promise.is_ready()
        pass
    print promise

###Methods###

Promises have the following methods:

__is\_ready()__ - Returns _True_ if processing of the task has been completed.
Returns _False_ otherwise.

__has\_started()__ - Returns _True_ if processing has begun on the requested
task.  Returns _False_ if the task is still waiting in queue.

__get\_task__() - Returns a reference to the task that the Promise was created
with.

__get\_args__() - Returns a reference to the args that the Promise was created
with.

__get\_kwargs__() - Returns a reference to the kwargs that the Promise was
created with.

__get\_execution\_time()__ - If processing of the task has completed, this
method returns the length of time it took to peform the task.  If the task
has __not__ completed, this method returns _None_.

__get\_starte\_on()__ - Returns the datetime the task began execution.  If it
hasn't begin executing, this method returns _None_.

__get\_completed\_on()__ - Returns the datetime the task completed.  If it
hasn't completed or hasnt' even begun, this method will return _None_.

__get\_result()__ - Returns the result (return value) of the task.  If the
task hasn't completed or completed, but raised an Exception, the method will
return _None_.

__get\_exception()__ - If the task raised an Exception, this method will
return that Exception.  If the task completed successfully or hasn't even
started, this method will return _None_.

Copyright (c) 2017, Steve Brettschneider.
License: MIT (see LICENSE for details)
